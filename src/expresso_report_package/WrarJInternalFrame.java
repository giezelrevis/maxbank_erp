/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package expresso_report_package;
import com.sun.media.sound.InvalidFormatException;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.math.BigDecimal;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import org.apache.poi.EncryptedDocumentException;
import org.apache.poi.POIXMLException;
import org.apache.poi.openxml4j.opc.OPCPackage;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellValue;
import org.apache.poi.ss.usermodel.DataFormatter;
import org.apache.poi.ss.usermodel.FormulaEvaluator;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.WorkbookFactory;
import org.apache.poi.xssf.usermodel.XSSFFormulaEvaluator;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author Cyrus Magsino
 */
public class WrarJInternalFrame extends javax.swing.JInternalFrame {
    private static String rep_code;
    private static String sheetname;
    private static Integer row;
    private static Integer col;
    private static String refdate;
    private static final SimpleDateFormat SDF = new SimpleDateFormat( "yyyy-MM-dd" );
    /**
     * Creates new form WrarJInternalFrame
     */
    public WrarJInternalFrame(String repcode) throws SQLException, IOException {
        initComponents();
  
    }
    
    //ReportPreparationForm
    

    WrarJInternalFrame() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCalendar1 = new org.freixas.jcalendar.JCalendar();
        jLabel1 = new javax.swing.JLabel();
        jCalendarComboWrar = new org.freixas.jcalendar.JCalendarCombo();
        btnCancel = new javax.swing.JButton();
        btnGenerate = new javax.swing.JButton();
        J = new javax.swing.JProgressBar();

        setClosable(true);
        setTitle("WRRAR");
        setName("reportparameterframe"); // NOI18N

        jLabel1.setText("Report Cut-Off Date:");

        jCalendarComboWrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCalendarComboWrarActionPerformed(evt);
            }
        });

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnGenerate.setText("Generate");
        btnGenerate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerateActionPerformed(evt);
            }
        });

        J.setMaximum(23);
        J.setStringPainted(true);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCalendarComboWrar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnCancel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnGenerate)
                        .addGap(18, 18, 18)
                        .addComponent(J, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jCalendarComboWrar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancel)
                    .addComponent(btnGenerate)
                    .addComponent(J, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        jCalendarComboWrar.getAccessibleContext().setAccessibleName("");
        jCalendarComboWrar.getAccessibleContext().setAccessibleDescription("");
        btnCancel.getAccessibleContext().setAccessibleName("btnCancel");
        btnGenerate.getAccessibleContext().setAccessibleName("btnGenerate");

        getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jCalendarComboWrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCalendarComboWrarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCalendarComboWrarActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
    this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_btnCancelActionPerformed
    int count=0;
    private void btnGenerateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerateActionPerformed
       
         Thread thread = new Thread(new Runnable(){
            @Override
            public void run()  
            { 
                try {
            // TODO add your handling code here:
            String dateString = SDF.format( jCalendarComboWrar.getDate() );
            Integer xrow = 1;
            rep_code = "FRPWORKFILE03";   
            String current = new java.io.File( "." ).getCanonicalPath();
            String wrarpreexcelTemplate = CreateReport.getReportTemplate(rep_code);        
            String wrarprecurrent = new java.io.File( "." ).getCanonicalPath();
            //HSSFWorkbook report_excel_template;
            XSSFWorkbook wrar_pre_report_excel_template; // for xlsx/xlsm
            // convert it into a POI object
            //Read Excel document first
           
            FileInputStream wrar_pre_input_document = new FileInputStream(new File(wrarprecurrent+wrarpreexcelTemplate));
            // convert it into a POI object
            DataFormatter formatter = new DataFormatter();
            wrar_pre_report_excel_template = new XSSFWorkbook(wrar_pre_input_document);
            FormulaEvaluator evaluator = wrar_pre_report_excel_template.getCreationHelper().createFormulaEvaluator();
          
            xrow = 1;
            Connection conn = ConnectionManager.getConnection();
            
            Statement wrarst = conn.createStatement();
            String sqlstrwrar = wrarQuery(dateString);
            System.out.println("this " + sqlstrwrar);
            ResultSet wrarrs = wrarst.executeQuery(sqlstrwrar);
            
            System.out.println("wrarrs " + wrarrs);
            if(!wrarrs.isBeforeFirst()){
                System.out.println("NO VALUE");
                XSSFSheet wrar_report_worksheet;
                wrar_report_worksheet = wrar_pre_report_excel_template.getSheet("WRAR");
                
                
                
                for (int x =1; x <=  wrar_report_worksheet.getLastRowNum(); x++){
                    Row row = wrar_report_worksheet.getRow(x);
                    for(int y=1;y<7;y++){
                        System.out.println("row : " + x + "col :" + y);
                        System.out.println("CELL CLEANING upon inserting");
                        Cell cell = row.getCell(y);
                        if (cell == null){
                            cell = row.createCell(y);
                        }
                        cell.setCellValue(" ");
                        
                    }
                    
                }
                
            }else{
                
                while (wrarrs.next()){
                    System.out.println( "GL" + wrarrs.getString(1));
                    System.out.println( "Sort Name" + wrarrs.getString(2));
                    System.out.println( "Adj Balance" + wrarrs.getString(3));
                    System.out.println( "Debit" + wrarrs.getString(4));
                    System.out.println( "Credit" + wrarrs.getString(5));
                    System.out.println( "Debit txn" + wrarrs.getString(6));
                    System.out.println( "Credit txn" + wrarrs.getString(7));
                    
                    XSSFSheet wrar_report_worksheet;
                    wrar_report_worksheet = wrar_pre_report_excel_template.getSheet("WRRAR");
                    
                    //HSSFSheet report_worksheet = report_excel_template.getSheetAt(0);
                    // declare a Cell object
                    System.out.println("Report Counter Pass:" + wrar_report_worksheet);
                    System.out.println("xrow " + xrow);
                    System.out.println(xrow);
                    //START
                    
                    Row row = wrar_report_worksheet.getRow(xrow);
                    
                      if (row == null) {
                                     row = wrar_report_worksheet.createRow(xrow);
                            } 
                      for(int y=1;y<10;y++){
                        System.out.println("row : " + xrow + "col :" + y);
                        System.out.println("CELL CLEANING this " + y);
                      
                        // Cell cellx = row.getCell(y);
                        System.out.println("this");
                        Cell cell = row.getCell(y);
                        if (cell == null){
                            cell = row.createCell(y);
                        }
                        try{
                            System.out.println("Print line this " + cell);
                            //null
                            if(y<3){
                                cell.setCellValue(wrarrs.getString(y));
                            }else if(wrarrs.getString(y) == null || Double.parseDouble(wrarrs.getString(y)) == 0){
                                
                                cell.setCellValue(0.00D);
                            }else{
                                System.out.println("wrarrs.is not null");
                                
                                cell.setCellValue(Double.parseDouble(wrarrs.getString(y)));
                            }                                    
                            
                            
                        }catch(POIXMLException ex){
                            //  JOptionPane.showMessageDialog(this, ex.getMessage());
                            
                        }catch(NullPointerException ex){
                            //  JOptionPane.showMessageDialog(this, ex.getMessage());
                            
                        }
                        
                    }
                    
                    
                    
                    xrow += 1;
                    //END
                }
            }
            
            
            wrarst.close();
             count++;
             J.setValue(count + 50);
            //Thread.sleep(500);
                //XSSFFormulaEvaluator.evaluateAllFormulaCells(report_excel_template);
            FormulaEvaluator xevaluator = wrar_pre_report_excel_template.getCreationHelper().createFormulaEvaluator();
            xevaluator.setIgnoreMissingWorkbooks(true);
            System.out.println("FORMULA" + xevaluator);
            for (Sheet sheet : wrar_pre_report_excel_template){
                System.out.println("Sheet" + sheet);
                for(Row r : sheet){
                    for(Cell c: r ){
                        
                        if(c.getCellType() == Cell.CELL_TYPE_FORMULA){
                            xevaluator.evaluateFormulaCell(c);
                        }
                    }
                  }
            }
            FileOutputStream wraroutput_file =new FileOutputStream(new File(wrarprecurrent+wrarpreexcelTemplate));
            //write changes
            wrar_pre_report_excel_template.write(wraroutput_file);
            //close the stream
            wraroutput_file.close();
            
            //WRRAR TEMPLATE
            
            //START
            //
            //START
            String bsp_wraracct = CreateReport.getReportTemplate("WRRAR");
            //HSSFWorkbook report_excel_template;
            XSSFWorkbook bsp_wraracct_excel_template; // for xlsx/xlsm
            //Read Excel document first
            FileInputStream bsp_wraracct_input_document = new FileInputStream(new File(current+bsp_wraracct));
            bsp_wraracct_excel_template = new XSSFWorkbook(bsp_wraracct_input_document);
 
            // Sheet bsp_cp_report_worksheet;
            XSSFSheet wraracctpre_report_worksheet;
            XSSFSheet wrar_report_worksheet;

            wraracctpre_report_worksheet = wrar_pre_report_excel_template.getSheet("WP-FRP-WRAR-TABLE");
            for(int x = 1 ; x <= wraracctpre_report_worksheet.getLastRowNum();x++){
                Row ph_row3 = wraracctpre_report_worksheet.getRow(x);
                if (ph_row3 == null) {
                    x = wraracctpre_report_worksheet.getLastRowNum();
                    continue;
                } 
                
                sheetname = ph_row3.getCell(2).toString();
                System.out.println("SHEET" + ph_row3.getCell(2).toString() +  "row" + ph_row3.getCell(3) + "VALUE " + ph_row3.getCell(5) + "number of " + x);
                if(ph_row3.getCell(3) != null){
                    row = Integer.parseInt(formatter.formatCellValue(ph_row3.getCell(3), evaluator));
                    System.out.println("dadaan ba dito");
                    col = Integer.parseInt(formatter.formatCellValue(ph_row3.getCell(4), evaluator));
                    
                    Cell socVal = ph_row3.getCell(5);
                    if (socVal == null){
                        socVal = ph_row3.createCell(5);
                    }
                    String con_soc_val = String.valueOf(socVal.getNumericCellValue());
                    wrar_report_worksheet = bsp_wraracct_excel_template.getSheet(sheetname.replace(".0",""));
                    System.out.println("worksheet" + wrar_report_worksheet);
                    Row xsocRow = wrar_report_worksheet.getRow(row);
                    if(xsocRow == null){
                        continue;
                    }
                    Cell socCell = xsocRow.getCell(col);
                    if (socCell == null){
                        socCell = ph_row3.createCell(col);
                    }
                    
                    if(con_soc_val.isEmpty()){
                        System.out.println("pumasok sa empty");
                        socCell.setCellValue(0.00D);
                        
                    }else{
                        if(String.valueOf(socVal) == ""){
                            System.out.println("no value");
                            socCell.setCellValue(0.00D);
                        }else{
                            System.out.println("with value" );
                            socCell.setCellValue(socVal.getNumericCellValue());
                        }
                        
                    }
                }
                
                
                
            }
            
            //    bsp_contigent_excel_template.close();
            FileOutputStream bsp_wrar_output_file =new FileOutputStream(new File(current+"\\output\\wrar_"+dateString+".xlsm"));
        
            //write changes
            bsp_wraracct_excel_template.write(bsp_wrar_output_file);
            //close the stream
            bsp_wraracct_excel_template.close();
            //END
            
            
//


//END    
        count++;
        J.setValue(100);
        JOptionPane.showMessageDialog(rootPane, "Report Complete!");
        jCalendarComboWrar.setDate(new Date());
        jCalendarComboWrar.setNullAllowed(true);
        
        } catch (SQLException ex) {
            Logger.getLogger(WrarJInternalFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(WrarJInternalFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
                
                
            }
            });
         thread.start();
        
        
    }//GEN-LAST:event_btnGenerateActionPerformed

    private static String wrarQuery(String dateString){
    
    
        String sqlstrwrar1 =  " with A as ( ";
	sqlstrwrar1 += " select ";
	sqlstrwrar1 += " A.sort_code as sort_code, round(sum(B.debit_balance - B.credit_balance),2) as bal_amt ";
	sqlstrwrar1 += " from gl_sort_code A ";
	sqlstrwrar1 += " left outer join gl_daily_file B on A.sort_code = substring(B.code from 1 for char_length(A.sort_code)) ";
	sqlstrwrar1 += " and B.ref_date = '"+dateString+"' and B.currency_id = 1 ";
	sqlstrwrar1 += " where substring(A.sort_code from 1 for 1) in ('1','2') ";
	sqlstrwrar1 += " group by A.sort_code,A.sort_name ";
	sqlstrwrar1 += " order by A.sort_code,A.sort_name ), ";
sqlstrwrar1 += " B as ( ";
	sqlstrwrar1 += " select ";
	sqlstrwrar1 += " A.sort_code as sort_code, case when round(sum(B.debit_amt - B.credit_amt),2) is null then 0 else round(sum(B.debit_amt - B.credit_amt),2) end as bal_amt ";
	sqlstrwrar1 += " from gl_sort_code A ";
	sqlstrwrar1 += " left outer join gl_txn_file B on A.sort_code = substring(B.gl_account_code from 1 for char_length(A.sort_code)) ";
	sqlstrwrar1 += " inner join gl_account C on B.gl_account_id = C.id ";
	sqlstrwrar1 += " and B.txn_value_date <= '"+dateString+"' and b.txn_date > '"+dateString+"' and C.currency_id = 1 ";
	sqlstrwrar1 += " where substring(A.sort_code from 1 for 1) in ('1','2') ";
	sqlstrwrar1 += " group by A.sort_code,A.sort_name ";
	sqlstrwrar1 += " order by A.sort_code,A.sort_name ";
sqlstrwrar1 += " ), ";
sqlstrwrar1 += " C as ( ";
	sqlstrwrar1 += " select ";
	sqlstrwrar1 += " A.sort_code as sort_code, round(sum(B.debit_balance - B.credit_balance),2) as bal_amt ";
	sqlstrwrar1 += " from gl_sort_code A ";
	sqlstrwrar1 += " left outer join gl_daily_file B on A.sort_code = substring(B.code from 1 for char_length(A.sort_code)) ";
	sqlstrwrar1 += " and B.ref_date = ('"+dateString+"'::date + 1) and B.currency_id = 1 ";
	sqlstrwrar1 += " where substring(A.sort_code from 1 for 1) in ('1','2') ";
	sqlstrwrar1 += " group by A.sort_code,A.sort_name ";
	sqlstrwrar1 += " order by A.sort_code,A.sort_name ), ";
sqlstrwrar1 += " D as ( ";
	sqlstrwrar1 += " select ";
	sqlstrwrar1 += " A.sort_code as sort_code, case when round(sum(B.debit_amt - B.credit_amt),2) is null then 0 else round(sum(B.debit_amt - B.credit_amt),2) end as bal_amt ";
	sqlstrwrar1 += " from gl_sort_code A ";
	sqlstrwrar1 += " left outer join gl_txn_file B on A.sort_code = substring(B.gl_account_code from 1 for char_length(A.sort_code)) ";
	sqlstrwrar1 += " inner join gl_account C on B.gl_account_id = C.id ";
	sqlstrwrar1 += " and B.txn_value_date <= ('"+dateString+"'::date + 1) and b.txn_date > ('"+dateString+"'::date + 1) and C.currency_id = 1 ";
	sqlstrwrar1 += " where substring(A.sort_code from 1 for 1) in ('1','2') ";
	sqlstrwrar1 += " group by A.sort_code,A.sort_name ";
	sqlstrwrar1 += " order by A.sort_code,A.sort_name ";
sqlstrwrar1 += " ), ";
sqlstrwrar1 += " E as ( ";
	sqlstrwrar1 += " select ";
	sqlstrwrar1 += " A.sort_code as sort_code, round(sum(B.debit_balance - B.credit_balance),2) as bal_amt ";
	sqlstrwrar1 += " from gl_sort_code A ";
	sqlstrwrar1 += " left outer join gl_daily_file B on A.sort_code = substring(B.code from 1 for char_length(A.sort_code)) ";
	sqlstrwrar1 += " and B.ref_date = ('"+dateString+"'::date + 2) and B.currency_id = 1 ";
	sqlstrwrar1 += " where substring(A.sort_code from 1 for 1) in ('1','2') ";
	sqlstrwrar1 += " group by A.sort_code,A.sort_name ";
	sqlstrwrar1 += " order by A.sort_code,A.sort_name ), ";
sqlstrwrar1 += " F as ( ";
	sqlstrwrar1 += " select ";
	sqlstrwrar1 += " A.sort_code as sort_code, case when round(sum(B.debit_amt - B.credit_amt),2) is null then 0 else round(sum(B.debit_amt - B.credit_amt),2) end as bal_amt ";
	sqlstrwrar1 += " from gl_sort_code A ";
	sqlstrwrar1 += " left outer join gl_txn_file B on A.sort_code = substring(B.gl_account_code from 1 for char_length(A.sort_code)) ";
	sqlstrwrar1 += " inner join gl_account C on B.gl_account_id = C.id ";
	sqlstrwrar1 += " and B.txn_value_date <= ('"+dateString+"'::date + 2) and b.txn_date > ('"+dateString+"'::date + 2) and C.currency_id = 1 ";
	sqlstrwrar1 += " where substring(A.sort_code from 1 for 1) in ('1','2') ";
	sqlstrwrar1 += " group by A.sort_code,A.sort_name ";
	sqlstrwrar1 += " order by A.sort_code,A.sort_name ";
sqlstrwrar1 += " ), ";
sqlstrwrar1 += " G as ( ";
	sqlstrwrar1 += " select ";
	sqlstrwrar1 += " A.sort_code as sort_code, round(sum(B.debit_balance - B.credit_balance),2) as bal_amt ";
	sqlstrwrar1 += " from gl_sort_code A ";
	sqlstrwrar1 += " left outer join gl_daily_file B on A.sort_code = substring(B.code from 1 for char_length(A.sort_code)) ";
	sqlstrwrar1 += " and B.ref_date = ('"+dateString+"'::date + 3) and B.currency_id = 1 ";
	sqlstrwrar1 += " where substring(A.sort_code from 1 for 1) in ('1','2') ";
	sqlstrwrar1 += " group by A.sort_code,A.sort_name ";
	sqlstrwrar1 += " order by A.sort_code,A.sort_name ), ";
sqlstrwrar1 += " H as ( ";
	sqlstrwrar1 += " select ";
	sqlstrwrar1 += " A.sort_code as sort_code, case when round(sum(B.debit_amt - B.credit_amt),2) is null then 0 else round(sum(B.debit_amt - B.credit_amt),2) end as bal_amt ";
	sqlstrwrar1 += " from gl_sort_code A ";
	sqlstrwrar1 += " left outer join gl_txn_file B on A.sort_code = substring(B.gl_account_code from 1 for char_length(A.sort_code)) ";
	sqlstrwrar1 += " inner join gl_account C on B.gl_account_id = C.id ";
	sqlstrwrar1 += " and B.txn_value_date <= ('"+dateString+"'::date + 3) and b.txn_date > ('"+dateString+"'::date + 3) and C.currency_id = 1 ";
	sqlstrwrar1 += " where substring(A.sort_code from 1 for 1) in ('1','2') ";
	sqlstrwrar1 += " group by A.sort_code,A.sort_name ";
	sqlstrwrar1 += " order by A.sort_code,A.sort_name ";
sqlstrwrar1 += " ), ";
sqlstrwrar1 += " I as ( ";
	sqlstrwrar1 += " select ";
	sqlstrwrar1 += " A.sort_code as sort_code, round(sum(B.debit_balance - B.credit_balance),2) as bal_amt ";
	sqlstrwrar1 += " from gl_sort_code A ";
	sqlstrwrar1 += " left outer join gl_daily_file B on A.sort_code = substring(B.code from 1 for char_length(A.sort_code)) ";
	sqlstrwrar1 += " and B.ref_date = ('"+dateString+"'::date + 4) and B.currency_id = 1 ";
	sqlstrwrar1 += " where substring(A.sort_code from 1 for 1) in ('1','2') ";
	sqlstrwrar1 += " group by A.sort_code,A.sort_name ";
	sqlstrwrar1 += " order by A.sort_code,A.sort_name ), ";
sqlstrwrar1 += " J as ( ";
	sqlstrwrar1 += " select ";
	sqlstrwrar1 += " A.sort_code as sort_code, case when round(sum(B.debit_amt - B.credit_amt),2) is null then 0 else round(sum(B.debit_amt - B.credit_amt),2) end as bal_amt ";
	sqlstrwrar1 += " from gl_sort_code A ";
	sqlstrwrar1 += " left outer join gl_txn_file B on A.sort_code = substring(B.gl_account_code from 1 for char_length(A.sort_code)) ";
	sqlstrwrar1 += " inner join gl_account C on B.gl_account_id = C.id ";
	sqlstrwrar1 += " and B.txn_value_date <= ('"+dateString+"'::date + 4) and b.txn_date > ('"+dateString+"'::date + 4) and C.currency_id = 1 ";
	sqlstrwrar1 += " where substring(A.sort_code from 1 for 1) in ('1','2') ";
	sqlstrwrar1 += " group by A.sort_code,A.sort_name ";
	sqlstrwrar1 += " order by A.sort_code,A.sort_name ";
sqlstrwrar1 += " ), ";
sqlstrwrar1 += " K as ( ";
	sqlstrwrar1 += " select ";
	sqlstrwrar1 += " A.sort_code as sort_code, round(sum(B.debit_balance - B.credit_balance),2) as bal_amt ";
	sqlstrwrar1 += " from gl_sort_code A ";
	sqlstrwrar1 += " left outer join gl_daily_file B on A.sort_code = substring(B.code from 1 for char_length(A.sort_code)) ";
	sqlstrwrar1 += " and B.ref_date = ('"+dateString+"'::date + 5) and B.currency_id = 1 ";
	sqlstrwrar1 += " where substring(A.sort_code from 1 for 1) in ('1','2') ";
	sqlstrwrar1 += " group by A.sort_code,A.sort_name ";
	sqlstrwrar1 += " order by A.sort_code,A.sort_name ), ";
sqlstrwrar1 += " L as ( ";
	sqlstrwrar1 += " select ";
	sqlstrwrar1 += " A.sort_code as sort_code, case when round(sum(B.debit_amt - B.credit_amt),2) is null then 0 else round(sum(B.debit_amt - B.credit_amt),2) end as bal_amt ";
	sqlstrwrar1 += " from gl_sort_code A ";
	sqlstrwrar1 += " left outer join gl_txn_file B on A.sort_code = substring(B.gl_account_code from 1 for char_length(A.sort_code)) ";
	sqlstrwrar1 += " inner join gl_account C on B.gl_account_id = C.id ";
	sqlstrwrar1 += " and B.txn_value_date <= ('"+dateString+"'::date + 5) and b.txn_date > ('"+dateString+"'::date + 5) and C.currency_id = 1 ";
	sqlstrwrar1 += " where substring(A.sort_code from 1 for 1) in ('1','2') ";
	sqlstrwrar1 += " group by A.sort_code,A.sort_name ";
	sqlstrwrar1 += " order by A.sort_code,A.sort_name ";
sqlstrwrar1 += " ), ";
sqlstrwrar1 += " M as ( ";
	sqlstrwrar1 += " select ";
	sqlstrwrar1 += " A.sort_code as sort_code, round(sum(B.debit_balance - B.credit_balance),2) as bal_amt ";
	sqlstrwrar1 += " from gl_sort_code A ";
	sqlstrwrar1 += " left outer join gl_daily_file B on A.sort_code = substring(B.code from 1 for char_length(A.sort_code)) ";
	sqlstrwrar1 += " and B.ref_date = ('"+dateString+"'::date + 6)  and B.currency_id = 1 ";
	sqlstrwrar1 += " where substring(A.sort_code from 1 for 1) in ('1','2') ";
	sqlstrwrar1 += " group by A.sort_code,A.sort_name ";
	sqlstrwrar1 += " order by A.sort_code,A.sort_name ), ";
sqlstrwrar1 += " N as ( ";
	sqlstrwrar1 += " select ";
	sqlstrwrar1 += " A.sort_code as sort_code, case when round(sum(B.debit_amt - B.credit_amt),2) is null then 0 else round(sum(B.debit_amt - B.credit_amt),2) end as bal_amt ";
	sqlstrwrar1 += " from gl_sort_code A ";
	sqlstrwrar1 += " left outer join gl_txn_file B on A.sort_code = substring(B.gl_account_code from 1 for char_length(A.sort_code)) ";
	sqlstrwrar1 += " inner join gl_account C on B.gl_account_id = C.id ";
	sqlstrwrar1 += " and B.txn_value_date <= ('"+dateString+"'::date + 6) and b.txn_date > ('"+dateString+"'::date + 6) and C.currency_id = 1 ";
	sqlstrwrar1 += " where substring(A.sort_code from 1 for 1) in ('1','2') ";
	sqlstrwrar1 += " group by A.sort_code,A.sort_name ";
	sqlstrwrar1 += " order by A.sort_code,A.sort_name ";
sqlstrwrar1 += " ) ";
sqlstrwrar1 += " select ";
sqlstrwrar1 += " 'A-' || X.sort_code as gl, ";
sqlstrwrar1 += " X.sort_name, ";
sqlstrwrar1 += " case when A.bal_amt + case when B.bal_amt is null then 0 else B.bal_amt end >= 0 ";
	sqlstrwrar1 += " then A.bal_amt + case when B.bal_amt is null then 0 else B.bal_amt end ";
	sqlstrwrar1 += "else (A.bal_amt + case when B.bal_amt is null then 0 else B.bal_amt end) * -1 end as adj_bal_01, ";
sqlstrwrar1 += " case when C.bal_amt + case when D.bal_amt is null then 0 else D.bal_amt end >= 0 ";
	sqlstrwrar1 += " then C.bal_amt + case when D.bal_amt is null then 0 else D.bal_amt end ";
	sqlstrwrar1 += "else (C.bal_amt + case when D.bal_amt is null then 0 else D.bal_amt end) * -1 end as adj_bal_02, ";
sqlstrwrar1 += " case when E.bal_amt + case when F.bal_amt is null then 0 else F.bal_amt end >= 0 ";
	sqlstrwrar1 += " then E.bal_amt + case when F.bal_amt is null then 0 else F.bal_amt end ";
	sqlstrwrar1 += "else (E.bal_amt + case when F.bal_amt is null then 0 else F.bal_amt end) * -1 end as adj_bal_03, ";
sqlstrwrar1 += " case when G.bal_amt + case when H.bal_amt is null then 0 else H.bal_amt end >= 0 ";
	sqlstrwrar1 += " then G.bal_amt + case when H.bal_amt is null then 0 else H.bal_amt end ";
	sqlstrwrar1 += "else (G.bal_amt + case when H.bal_amt is null then 0 else H.bal_amt end) * -1 end as adj_bal_04, ";
sqlstrwrar1 += " case when I.bal_amt + case when J.bal_amt is null then 0 else J.bal_amt end >= 0 ";
	sqlstrwrar1 += " then I.bal_amt + case when J.bal_amt is null then 0 else J.bal_amt end ";
	sqlstrwrar1 += "else (I.bal_amt + case when J.bal_amt is null then 0 else J.bal_amt end) * -1 end as adj_bal_05, ";
sqlstrwrar1 += " case when K.bal_amt + case when L.bal_amt is null then 0 else L.bal_amt end >= 0 ";
	sqlstrwrar1 += " then K.bal_amt + case when L.bal_amt is null then 0 else L.bal_amt end ";
	sqlstrwrar1 += "else (K.bal_amt + case when L.bal_amt is null then 0 else L.bal_amt end) * -1 end as adj_bal_06, ";
sqlstrwrar1 += " case when M.bal_amt + case when N.bal_amt is null then 0 else N.bal_amt end >= 0 ";
	sqlstrwrar1 += " then M.bal_amt + case when N.bal_amt is null then 0 else N.bal_amt end ";
	sqlstrwrar1 += "else (M.bal_amt + case when N.bal_amt is null then 0 else N.bal_amt end) * -1 end as adj_bal_07 ";
sqlstrwrar1 += " from gl_sort_code X ";
sqlstrwrar1 += " inner join A on X.sort_code = A.sort_code ";
sqlstrwrar1 += " left outer join B on X.sort_code = B.sort_code ";
sqlstrwrar1 += " inner join C on X.sort_code = C.sort_code ";
sqlstrwrar1 += " left outer join D on X.sort_code = D.sort_code ";
sqlstrwrar1 += " inner join E on X.sort_code = E.sort_code ";
sqlstrwrar1 += " left outer join F on X.sort_code = F.sort_code ";
sqlstrwrar1 += " inner join G on X.sort_code = G.sort_code ";
sqlstrwrar1 += " left outer join H on X.sort_code = H.sort_code ";
sqlstrwrar1 += " inner join I on X.sort_code = I.sort_code ";
sqlstrwrar1 += " left outer join J on X.sort_code = J.sort_code ";
sqlstrwrar1 += " inner join K on X.sort_code = K.sort_code ";
sqlstrwrar1 += " left outer join L on X.sort_code = L.sort_code ";
sqlstrwrar1 += " inner join M on X.sort_code = M.sort_code ";
sqlstrwrar1 += " left outer join N on X.sort_code = N.sort_code ";
sqlstrwrar1 += " where substring(X.sort_code from 1 for 1) in ('1','2') ";
sqlstrwrar1 += " order by gl ";
        System.out.println("SQLLL");
        return sqlstrwrar1;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JProgressBar J;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnGenerate;
    private org.freixas.jcalendar.JCalendar jCalendar1;
    private org.freixas.jcalendar.JCalendarCombo jCalendarComboWrar;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
