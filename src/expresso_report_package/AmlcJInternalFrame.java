/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package expresso_report_package;

import java.io.File;
import java.io.IOException;
import java.io.PrintWriter;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import java.util.Date;
import java.text.DateFormat;
import java.text.SimpleDateFormat;

/**
 *
 * @author User01
 */
public class AmlcJInternalFrame extends javax.swing.JInternalFrame {
    private static String curr_dir;
    private static Connection conn;
    private static Statement st_header;
    private static ResultSet rs_header;
    private static Statement st_detail;
    private static ResultSet rs_detail;
    private static Statement st_instCode;
    private static ResultSet rs_instCode;
    private static Statement st_count;
    private static ResultSet rs_count;
    
   
    public AmlcJInternalFrame() throws SQLException {
        initComponents();
        
           
        conn = null;
        try {
            conn = ConnectionManager.getConnection();
                  
            Statement st = conn.createStatement();      
            String sql;
            sql = "select distinct cast(txn_date as date) ref_date from txn_file order by cast(txn_date as date) desc;";

            try (ResultSet rs = st.executeQuery(sql)) {
                while (rs.next())
                {
                   // System.out.println(rs.getString(1)); referenceDate(drop)
                    this.cmb_refDate.addItem(rs.getString("ref_date"));
                }
            }
        } catch (SQLException | IOException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
            Logger.getLogger(AmlcJInternalFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        conn.close();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cmb_refDate = new javax.swing.JComboBox();
        cmb_repType = new javax.swing.JComboBox();
        cmb_submissionType = new javax.swing.JComboBox();
        btn_create = new javax.swing.JButton();
        btn_cancel = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txt_startDate = new javax.swing.JTextField();

        setClosable(true);
        setTitle("AMCL Covered Transaction Report");

        jLabel1.setText("Report Cut-Off Date:");

        jLabel2.setText("Report Type:");

        jLabel3.setText("Submission Type:");

        cmb_refDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_refDateActionPerformed(evt);
            }
        });

        cmb_repType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "CTR", " " }));

        cmb_submissionType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "A - Add", "E - Edit/Correction", "D - Delete", "T - Test" }));

        btn_create.setText("Create");
        btn_create.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_createActionPerformed(evt);
            }
        });

        btn_cancel.setText("Cancel");
        btn_cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cancelActionPerformed(evt);
            }
        });

        jLabel4.setText("Report Start Date:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btn_cancel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_create))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cmb_refDate, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmb_repType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmb_submissionType, 0, 149, Short.MAX_VALUE)
                            .addComponent(txt_startDate))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txt_startDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cmb_refDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cmb_repType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cmb_submissionType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_create)
                    .addComponent(btn_cancel))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancelActionPerformed
        this.dispose();
    }//GEN-LAST:event_btn_cancelActionPerformed

    private void btn_createActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_createActionPerformed
                                        
       String startdate = this.txt_startDate.getText();
        String refdate = this.cmb_refDate.getSelectedItem().toString();
        String reptype = this.cmb_repType.getSelectedItem().toString();
        String submittype = this.cmb_submissionType.getSelectedItem().toString();

        System.out.println(startdate);
        System.out.println(refdate);
        System.out.println(reptype);
        System.out.println(submittype);
        submittype = submittype.substring(0,1);
        System.out.println(submittype);

        //String current;
        try {
            curr_dir = new java.io.File( "." ).getCanonicalPath();
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
            Logger.getLogger(AmlcJInternalFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
     
         
        String headersql = "select distinct\n" +
                "txn_file.branch_id as integer,\n" +
                //"to_char(branch.run_date, 'YYYY-MM-DD')::text,\n" +
                "'H' :: text || ',' ||'1' :: text || ',' || concat(substring(replace(branch.swift_code, '-', ''),3,6),'00000') :: text || ',' || to_char(branch.run_date, 'YYYYMMDD') :: text || ',' || '"+
                reptype +"' :: text || ',' || '1'  :: text || ',' || '" +
                submittype +"' :: text as r_header\n" +
                "from txn_file \n" +
                "	inner join txn_template on txn_template.id = txn_file.txn_template_id and txn_template.amla_code is not null\n" +
                "	inner join branch on branch.id = txn_file.branch_id \n" +
                "where txn_amt > 499999.99 and txn_date >= '"+startdate+"' and txn_date <= '"+refdate+"'\n" + // 
                "group by branch.run_date, branch.swift_code, txn_file.branch_id,txn_file.txn_amt";//
        System.out.println(headersql);
        
        String instCodeSql = "select substring(replace(param_value,'-',''),3,9) from institution where param_code = 'GEN.10010'";
        System.out.println(instCodeSql);       
        File amlcFile = null;
        
        String count="select count(*)::text from fn_amlc_ctr (cast('"+startdate+"' as date), cast('"+refdate+"' as date))";
        System.out.println(count);
         try {
            conn = ConnectionManager.getConnection();
            st_header = conn.createStatement();
            rs_header = st_header.executeQuery(headersql);
            st_instCode = conn.createStatement();
            rs_instCode = st_instCode.executeQuery(instCodeSql);
            st_count = conn.createStatement();
            rs_count = st_count.executeQuery(count);
            
            while(rs_instCode.next()){
             String subInstCode = rs_instCode.getString(1);
             System.out.println("INSTCODE: "+ subInstCode);
             String pattern = "yyyyMMdd";
             SimpleDateFormat simpleDateFormat = new SimpleDateFormat(pattern);
             String date = simpleDateFormat.format(new Date());
             System.out.println(date);
                while(rs_count.next()){
                    System.out.println("COUNT: "+rs_count.getString(1));
                    String countAcct = rs_count.getString(1);
                    amlcFile = new File(curr_dir+"\\output\\"+subInstCode+date+countAcct+".csv");
                }
            }
            System.out.println("Current dir:"+curr_dir);
            try (PrintWriter output = new PrintWriter(amlcFile)) {
                Integer d_ctr = 0;
                Double txn_amt = 0.0;
                
             while(rs_header.next())
                {
                    //prints header
                    output.println(rs_header.getString(2));
                                                            
                    //generate details
                    //String sql_detail = "select fn_amlc_ctr (cast('"+startdate+"' as date),cast('"+refdate+"' as date));";
                    String sql_detail = "select fn_amlc_ctr (cast('"+startdate+"' as date), cast('"+refdate+"' as date),"+rs_header.getString(1)+");";
                    System.out.println(sql_detail);
                    st_detail = conn.createStatement();
                    rs_detail = st_detail.executeQuery(sql_detail);
                                  
                     
                    while(rs_detail.next()){
                                              
                    if (rs_detail.getString(1).isEmpty()){
                        //rs_header.deleteRow();
                        }
                      else {
                        //output.println(rs_detail.getString(1));
                        output.println(rs_detail.getString(1).substring(1, rs_detail.getString(1).length()-1));
                        String[] detalValues = rs_detail.getString(1).split(",");
                        txn_amt = txn_amt + Double.parseDouble(detalValues[6]);
                        //System.out.println(Arrays.toString(rs_detail.getString(1).split(",")));
                       // System.out.println(rs_detail.getArray().toString());
                         d_ctr++;
                     }
                    }
                
                    st_detail.close();
                    rs_detail.close();
                } 
                    output.println("T,"+String.valueOf(txn_amt)+","+String.valueOf(d_ctr));
                    //output.println("T,"+ String.format("%.2f",txn_amt)+","+ String.format("%.2f",d_ctr));
                    JOptionPane.showMessageDialog(this, "Report Complete.");
                //} 
                //generate footer
                //String.format("%s",d)
                //output.println("T,"+String.valueOf(txn_amt)+","+String.valueOf(d_ctr));
                st_header.close();
                rs_header.close();
                conn.close();
                this.dispose();
                
            }catch (IOException | SQLException ex) {
            Logger.getLogger(CICJInternalFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex);
        }
            
            
        } catch (SQLException | IOException ex) {
         JOptionPane.showMessageDialog(this, ex.getMessage());
         Logger.getLogger(AmlcJInternalFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btn_createActionPerformed

    private void cmb_refDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_refDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmb_refDateActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_cancel;
    private javax.swing.JButton btn_create;
    private javax.swing.JComboBox cmb_refDate;
    private javax.swing.JComboBox cmb_repType;
    private javax.swing.JComboBox cmb_submissionType;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField txt_startDate;
    // End of variables declaration//GEN-END:variables
}
