/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package expresso_report_package;

import java.awt.Dimension;
import java.io.IOException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JRException;
import expresso_report_package.MainJFrame;
import javax.swing.JFrame;
/**
 *
 * @author User01
 */
public class MainJFrame extends javax.swing.JFrame {
    private static String jasperFileName;
    /**
     * Creates new form MainJFrame
     */
    private static String reportingPackageKeyGen;
    private static String reportingPackageKey;
    public MainJFrame() throws SQLException, IOException {
        initComponents();
        
        
        jMenuReports.disable();
        jMenuItemDataForm.setVisible(false);
        
        //Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        //this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
        setExtendedState(java.awt.Frame.MAXIMIZED_BOTH);
        //this.jDesktopPane.setSize(this.getHeight(),this.getWidth());
        
        try(Connection conn = ConnectionManager.getConnection()){
            System.out.println(conn);
            if (conn == (null)){
                JOptionPane.showMessageDialog(this,"Could not establish connection. \n1. Go to Settings->Connection. \n2. Restart Application"
                        + " ");
                this.jMenuReports.setEnabled(false);
            }
            else {
                Statement st1 = conn.createStatement();
                String sql1;
                sql1 = "select md5(param_value || 'Aris Carl Melissa Glenn Johann Lincoln Yves Zyrie Aldrin Gab' || (select md5(param_value ) from institution where param_code = 'GEN.10010')),(select param_value from institution where param_code = 'GEN.10245') from institution where param_code = 'GEN.10000';";
                try (ResultSet rs1 = st1.executeQuery(sql1)) {
                    while (rs1.next())
                    {
                        reportingPackageKeyGen = rs1.getString(1);
                        reportingPackageKey = rs1.getString(2);
                    }
                }
                if (!reportingPackageKeyGen.equals(reportingPackageKey)){
                    JOptionPane.showMessageDialog(this,"Sorry your Reporting Package Key is Invalid. \nPlease contact your provider.");
                    this.jMenuReports.setEnabled(false);
                    //System.exit(0);
                }
            }
             

        } catch (SQLException ex) {
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage());
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem23 = new javax.swing.JMenuItem();
        jMenuItem27 = new javax.swing.JMenuItem();
        jMenuItem29 = new javax.swing.JMenuItem();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenuItem12 = new javax.swing.JMenuItem();
        jDesktopPane = new javax.swing.JDesktopPane();
        jMainMenuBar = new javax.swing.JMenuBar();
        jMenuReports = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem15 = new javax.swing.JMenuItem();
        jMenuItem_WRRAR = new javax.swing.JMenuItem();
        jMenuFRP = new javax.swing.JMenu();
        jMenuFRP_v12 = new javax.swing.JMenu();
        jMenuItemFRP_v12_RB_SOLO_ANNUAL = new javax.swing.JMenuItem();
        jMenuItemFRP_v12_RB_SOLO_BORROW = new javax.swing.JMenuItem();
        jMenuItemFRP_v12_RB_SOLO_CNTINGNT = new javax.swing.JMenuItem();
        jMenuItemFRP_v12_RB_SOLO_COCE = new javax.swing.JMenuItem();
        jMenuItemFRP_v12_RB_SOLO_DEPLIAB = new javax.swing.JMenuItem();
        jMenuItemFRP_v12_RB_SOLO_FINASSET = new javax.swing.JMenuItem();
        jMenuItemFRP_v12_RB_SOLO_FINLIAB = new javax.swing.JMenuItem();
        jMenuItemFRP_v12_RB_SOLO_LOANS = new javax.swing.JMenuItem();
        jMenuItemFRP_v12_RB_SOLO_NONFIN = new javax.swing.JMenuItem();
        jMenuItemFRP_v12_RB_SOLO_OTHERAST = new javax.swing.JMenuItem();
        jMenuItemFRP_v12_RB_SOLO_OTHRLIAB = new javax.swing.JMenuItem();
        jMenuItemFRP_v12_RB_SOLO_SIEACCT = new javax.swing.JMenuItem();
        jMenuItemFRP_v12_RB_SOLO_SOCSIE = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuPBS = new javax.swing.JMenu();
        jMenuItemPBS = new javax.swing.JMenuItem();
        jMenuItemPBS_CP = new javax.swing.JMenuItem();
        jMenuAgriAgra = new javax.swing.JMenu();
        jMenuItemAgriAgra = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuCAR = new javax.swing.JMenu();
        jMenuItemCAR688CS = new javax.swing.JMenuItem();
        jMenuItemCARCP = new javax.swing.JMenuItem();
        jMenuMSME = new javax.swing.JMenu();
        jMenuItemMSME = new javax.swing.JMenuItem();
        jMenuItemMSMECP = new javax.swing.JMenuItem();
        jMenuMF = new javax.swing.JMenu();
        jMenuItemMFCP = new javax.swing.JMenuItem();
        jMenuItemMFMBS = new javax.swing.JMenuItem();
        jMenuItemMFMIS = new javax.swing.JMenuItem();
        jMenuBRIS = new javax.swing.JMenu();
        jMenuItemBRIS = new javax.swing.JMenuItem();
        jMenuItemxBnkBranch = new javax.swing.JMenuItem();
        jSeparator5 = new javax.swing.JPopupMenu.Separator();
        jMenuCIC = new javax.swing.JMenu();
        jMenuItemCIC = new javax.swing.JMenuItem();
        jMenuItemCIC1 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jSeparator6 = new javax.swing.JPopupMenu.Separator();
        jMenuItem_amlc = new javax.swing.JMenuItem();
        jSeparator7 = new javax.swing.JPopupMenu.Separator();
        jMenuDAV = new javax.swing.JMenu();
        jMenuItemDAVDepositorInfo = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jSeparator8 = new javax.swing.JPopupMenu.Separator();
        jMenu3 = new javax.swing.JMenu();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem13 = new javax.swing.JMenuItem();
        jMenuItem14 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem16 = new javax.swing.JMenuItem();
        jMenuItem17 = new javax.swing.JMenuItem();
        jMenuItem21 = new javax.swing.JMenuItem();
        jMenuItem24 = new javax.swing.JMenuItem();
        jMenuItem25 = new javax.swing.JMenuItem();
        jMenuItem26 = new javax.swing.JMenuItem();
        jMenuItem28 = new javax.swing.JMenuItem();
        jMenuItem30 = new javax.swing.JMenuItem();
        jMenuItem31 = new javax.swing.JMenuItem();
        jMenuItem32 = new javax.swing.JMenuItem();
        jMenuItem33 = new javax.swing.JMenuItem();
        jSeparator9 = new javax.swing.JPopupMenu.Separator();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        jMenuItemExit = new javax.swing.JMenuItem();
        jMenuSettings = new javax.swing.JMenu();
        jMenuItemConnection = new javax.swing.JMenuItem();
        jMenuItemDataForm = new javax.swing.JMenuItem();

        jMenuItem23.setText("jMenuItem23");

        jMenuItem27.setText("jMenuItem27");

        jMenuItem29.setText("jMenuItem29");

        jMenuItem9.setText("jMenuItem9");

        jMenuItem12.setText("jMenuItem12");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Express-O Reporting Package");
        setExtendedState(9);
        setName("mainframe"); // NOI18N

        jDesktopPane.setBackground(new java.awt.Color(204, 204, 204));
        jDesktopPane.setForeground(new java.awt.Color(204, 204, 204));
        jDesktopPane.setPreferredSize(new java.awt.Dimension(1280, 720));

        javax.swing.GroupLayout jDesktopPaneLayout = new javax.swing.GroupLayout(jDesktopPane);
        jDesktopPane.setLayout(jDesktopPaneLayout);
        jDesktopPaneLayout.setHorizontalGroup(
            jDesktopPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1260, Short.MAX_VALUE)
        );
        jDesktopPaneLayout.setVerticalGroup(
            jDesktopPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 662, Short.MAX_VALUE)
        );

        jMenuReports.setText("Reports");
        jMenuReports.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuReportsActionPerformed(evt);
            }
        });

        jMenu2.setText("BSP Reports");

        jMenuItem15.setLabel("Report Preparation");
        jMenuItem15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem15ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem15);

        jMenuItem_WRRAR.setText("WRRAR");
        jMenuItem_WRRAR.setEnabled(false);
        jMenuItem_WRRAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_WRRARActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem_WRRAR);

        jMenuFRP.setText("BSP FRP Reporting Package");
        jMenuFRP.setEnabled(false);

        jMenuFRP_v12.setText("Simplified FRP");

        jMenuItemFRP_v12_RB_SOLO_ANNUAL.setText("RB-SOLO-ANNUAL");
        jMenuItemFRP_v12_RB_SOLO_ANNUAL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemFRP_v12_RB_SOLO_ANNUALActionPerformed(evt);
            }
        });
        jMenuFRP_v12.add(jMenuItemFRP_v12_RB_SOLO_ANNUAL);

        jMenuItemFRP_v12_RB_SOLO_BORROW.setText("RB-SOLO-BORROW");
        jMenuItemFRP_v12_RB_SOLO_BORROW.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemFRP_v12_RB_SOLO_BORROWActionPerformed(evt);
            }
        });
        jMenuFRP_v12.add(jMenuItemFRP_v12_RB_SOLO_BORROW);

        jMenuItemFRP_v12_RB_SOLO_CNTINGNT.setText("RB-SOLO-CNTINGNT");
        jMenuItemFRP_v12_RB_SOLO_CNTINGNT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemFRP_v12_RB_SOLO_CNTINGNTActionPerformed(evt);
            }
        });
        jMenuFRP_v12.add(jMenuItemFRP_v12_RB_SOLO_CNTINGNT);

        jMenuItemFRP_v12_RB_SOLO_COCE.setText("RB-SOLO-COCE");
        jMenuItemFRP_v12_RB_SOLO_COCE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemFRP_v12_RB_SOLO_COCEActionPerformed(evt);
            }
        });
        jMenuFRP_v12.add(jMenuItemFRP_v12_RB_SOLO_COCE);

        jMenuItemFRP_v12_RB_SOLO_DEPLIAB.setText("RB-SOLO-DEPLIAB");
        jMenuItemFRP_v12_RB_SOLO_DEPLIAB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemFRP_v12_RB_SOLO_DEPLIABActionPerformed(evt);
            }
        });
        jMenuFRP_v12.add(jMenuItemFRP_v12_RB_SOLO_DEPLIAB);

        jMenuItemFRP_v12_RB_SOLO_FINASSET.setText("RB-SOLO-FINASSET");
        jMenuItemFRP_v12_RB_SOLO_FINASSET.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemFRP_v12_RB_SOLO_FINASSETActionPerformed(evt);
            }
        });
        jMenuFRP_v12.add(jMenuItemFRP_v12_RB_SOLO_FINASSET);

        jMenuItemFRP_v12_RB_SOLO_FINLIAB.setText("RB-SOLO-FINLIAB");
        jMenuItemFRP_v12_RB_SOLO_FINLIAB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemFRP_v12_RB_SOLO_FINLIABActionPerformed(evt);
            }
        });
        jMenuFRP_v12.add(jMenuItemFRP_v12_RB_SOLO_FINLIAB);

        jMenuItemFRP_v12_RB_SOLO_LOANS.setText("RB-SOLO-LOANS");
        jMenuItemFRP_v12_RB_SOLO_LOANS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemFRP_v12_RB_SOLO_LOANSActionPerformed(evt);
            }
        });
        jMenuFRP_v12.add(jMenuItemFRP_v12_RB_SOLO_LOANS);

        jMenuItemFRP_v12_RB_SOLO_NONFIN.setText("RB-SOLO-NONFIN");
        jMenuItemFRP_v12_RB_SOLO_NONFIN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemFRP_v12_RB_SOLO_NONFINActionPerformed(evt);
            }
        });
        jMenuFRP_v12.add(jMenuItemFRP_v12_RB_SOLO_NONFIN);

        jMenuItemFRP_v12_RB_SOLO_OTHERAST.setText("RB-SOLO-OTHERAST");
        jMenuItemFRP_v12_RB_SOLO_OTHERAST.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemFRP_v12_RB_SOLO_OTHERASTActionPerformed(evt);
            }
        });
        jMenuFRP_v12.add(jMenuItemFRP_v12_RB_SOLO_OTHERAST);

        jMenuItemFRP_v12_RB_SOLO_OTHRLIAB.setText("RB-SOLO-OTHRLIAB");
        jMenuItemFRP_v12_RB_SOLO_OTHRLIAB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemFRP_v12_RB_SOLO_OTHRLIABActionPerformed(evt);
            }
        });
        jMenuFRP_v12.add(jMenuItemFRP_v12_RB_SOLO_OTHRLIAB);

        jMenuItemFRP_v12_RB_SOLO_SIEACCT.setText("RB-SOLO-SIEACCT");
        jMenuItemFRP_v12_RB_SOLO_SIEACCT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemFRP_v12_RB_SOLO_SIEACCTActionPerformed(evt);
            }
        });
        jMenuFRP_v12.add(jMenuItemFRP_v12_RB_SOLO_SIEACCT);

        jMenuItemFRP_v12_RB_SOLO_SOCSIE.setText("RB-SOLO-SOCSIE");
        jMenuItemFRP_v12_RB_SOLO_SOCSIE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemFRP_v12_RB_SOLO_SOCSIEActionPerformed(evt);
            }
        });
        jMenuFRP_v12.add(jMenuItemFRP_v12_RB_SOLO_SOCSIE);

        jMenuFRP.add(jMenuFRP_v12);

        jMenuItem1.setText("Control Prooflist");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenuFRP.add(jMenuItem1);

        jMenu2.add(jMenuFRP);

        jMenuPBS.setText("PBS");
        jMenuPBS.setEnabled(false);

        jMenuItemPBS.setText("Publish Balance Sheet");
        jMenuItemPBS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemPBSActionPerformed(evt);
            }
        });
        jMenuPBS.add(jMenuItemPBS);

        jMenuItemPBS_CP.setText("Publish Balance Sheet - Control Prooflist");
        jMenuItemPBS_CP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemPBS_CPActionPerformed(evt);
            }
        });
        jMenuPBS.add(jMenuItemPBS_CP);

        jMenu2.add(jMenuPBS);

        jMenuAgriAgra.setText("AGRI-AGRA Report");
        jMenuAgriAgra.setEnabled(false);

        jMenuItemAgriAgra.setText("Agri-Agra Report");
        jMenuItemAgriAgra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemAgriAgraActionPerformed(evt);
            }
        });
        jMenuAgriAgra.add(jMenuItemAgriAgra);

        jMenuItem3.setText("Agri-Agra Control Prooflist");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenuAgriAgra.add(jMenuItem3);

        jMenu2.add(jMenuAgriAgra);

        jMenuCAR.setText("CAR");
        jMenuCAR.setEnabled(false);

        jMenuItemCAR688CS.setText("CAR 688-CS");
        jMenuItemCAR688CS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemCAR688CSActionPerformed(evt);
            }
        });
        jMenuCAR.add(jMenuItemCAR688CS);

        jMenuItemCARCP.setText("CAR Control Prooflist Comprehensive");
        jMenuItemCARCP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemCARCPActionPerformed(evt);
            }
        });
        jMenuCAR.add(jMenuItemCARCP);

        jMenu2.add(jMenuCAR);

        jMenuMSME.setText("MSME");
        jMenuMSME.setEnabled(false);

        jMenuItemMSME.setText("MSME Report");
        jMenuItemMSME.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemMSMEActionPerformed(evt);
            }
        });
        jMenuMSME.add(jMenuItemMSME);

        jMenuItemMSMECP.setText("MSME Control Prooflist");
        jMenuItemMSMECP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemMSMECPActionPerformed(evt);
            }
        });
        jMenuMSME.add(jMenuItemMSMECP);

        jMenu2.add(jMenuMSME);

        jMenuMF.setText("Microfinance");
        jMenuMF.setEnabled(false);

        jMenuItemMFCP.setText("Mircofinance Control Prooflist");
        jMenuItemMFCP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemMFCPActionPerformed(evt);
            }
        });
        jMenuMF.add(jMenuItemMFCP);

        jMenuItemMFMBS.setText("MF MBS");
        jMenuItemMFMBS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemMFMBSActionPerformed(evt);
            }
        });
        jMenuMF.add(jMenuItemMFMBS);

        jMenuItemMFMIS.setText("MF MIS");
        jMenuItemMFMIS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemMFMISActionPerformed(evt);
            }
        });
        jMenuMF.add(jMenuItemMFMIS);

        jMenu2.add(jMenuMF);

        jMenuBRIS.setText("BRIS");
        jMenuBRIS.setEnabled(false);

        jMenuItemBRIS.setText("Control Prooflist");
        jMenuItemBRIS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemBRISActionPerformed(evt);
            }
        });
        jMenuBRIS.add(jMenuItemBRIS);

        jMenuItemxBnkBranch.setText("xBnkBranch");
        jMenuItemxBnkBranch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemxBnkBranchActionPerformed(evt);
            }
        });
        jMenuBRIS.add(jMenuItemxBnkBranch);

        jMenu2.add(jMenuBRIS);

        jMenuReports.add(jMenu2);
        jMenuReports.add(jSeparator5);

        jMenuCIC.setText("CIC Reports");
        jMenuCIC.setEnabled(false);

        jMenuItemCIC.setText("CIC Report (Date Open Txt File)");
        jMenuItemCIC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemCICActionPerformed(evt);
            }
        });
        jMenuCIC.add(jMenuItemCIC);

        jMenuItemCIC1.setText("CIC Report (Txt File)");
        jMenuItemCIC1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemCIC1ActionPerformed(evt);
            }
        });
        jMenuCIC.add(jMenuItemCIC1);

        jMenuItem4.setText("CIC - Individuals (ID)");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenuCIC.add(jMenuItem4);

        jMenuItem5.setText("CIC - Companies (BD) ");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenuCIC.add(jMenuItem5);

        jMenuItem6.setText("CIC - Installment Contracts (CI) ");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenuCIC.add(jMenuItem6);

        jMenuItem7.setText("CIC - Non-Installment Contracts (CN)");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenuCIC.add(jMenuItem7);

        jMenuReports.add(jMenuCIC);
        jMenuReports.add(jSeparator6);

        jMenuItem_amlc.setText("AMLC Report");
        jMenuItem_amlc.setEnabled(false);
        jMenuItem_amlc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_amlcActionPerformed(evt);
            }
        });
        jMenuReports.add(jMenuItem_amlc);
        jMenuReports.add(jSeparator7);

        jMenuDAV.setText("PDIC DAV Reports");
        jMenuDAV.setEnabled(false);

        jMenuItemDAVDepositorInfo.setText("Depositor Information");
        jMenuItemDAVDepositorInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemDAVDepositorInfoActionPerformed(evt);
            }
        });
        jMenuDAV.add(jMenuItemDAVDepositorInfo);

        jMenuItem2.setText("Deposit Information");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenuDAV.add(jMenuItem2);

        jMenuItem8.setText("Deposit Acount View (CSV)");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenuDAV.add(jMenuItem8);

        jMenuReports.add(jMenuDAV);
        jMenuReports.add(jSeparator8);

        jMenu3.setText("MIS Reports");
        jMenu3.setEnabled(false);

        jMenu1.setText("Financial Statement");

        jMenuItem13.setText("Consolidated");
        jMenuItem13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem13ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem13);

        jMenuItem14.setText("Generate Per Branch");
        jMenuItem14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem14ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem14);

        jMenu4.setText("Comparative FS");

        jMenuItem16.setText("Consolidated Comparative FS ");
        jMenuItem16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem16ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem16);

        jMenuItem17.setText("Per Branch Comparative FS");
        jMenuItem17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem17ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem17);

        jMenu1.add(jMenu4);

        jMenu3.add(jMenu1);

        jMenuItem21.setText("Liquidity Ratio");
        jMenuItem21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem21ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem21);

        jMenuItem24.setText("Other Key Ratios");
        jMenuItem24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem24ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem24);

        jMenuItem25.setText("Loans Granted per Branch");
        jMenu3.add(jMenuItem25);

        jMenuItem26.setText("Central Liability Ledger (Loans)");
        jMenu3.add(jMenuItem26);

        jMenuItem28.setText("Break-even Rates");
        jMenu3.add(jMenuItem28);

        jMenuItem30.setText("Loans and Deposit Summary");
        jMenu3.add(jMenuItem30);

        jMenuItem31.setText("Top 100 Borrowers");
        jMenu3.add(jMenuItem31);

        jMenuItem32.setText("Accomplishment report on loans & deposit");
        jMenu3.add(jMenuItem32);

        jMenuItem33.setText("Newly opened accounts on loans & deposit");
        jMenu3.add(jMenuItem33);

        jMenuReports.add(jMenu3);
        jMenuReports.add(jSeparator9);
        jMenuReports.add(jSeparator3);

        jMenuItemExit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemExit.setText("Exit");
        jMenuItemExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemExitActionPerformed(evt);
            }
        });
        jMenuReports.add(jMenuItemExit);

        jMainMenuBar.add(jMenuReports);

        jMenuSettings.setText("Settings");

        jMenuItemConnection.setText("Connection");
        jMenuItemConnection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemConnectionActionPerformed(evt);
            }
        });
        jMenuSettings.add(jMenuItemConnection);

        jMenuItemDataForm.setText("Data Formulation");
        jMenuItemDataForm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemDataFormActionPerformed(evt);
            }
        });
        jMenuSettings.add(jMenuItemDataForm);

        jMainMenuBar.add(jMenuSettings);

        setJMenuBar(jMainMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jDesktopPane, javax.swing.GroupLayout.DEFAULT_SIZE, 1260, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jDesktopPane, javax.swing.GroupLayout.DEFAULT_SIZE, 662, Short.MAX_VALUE)
                .addGap(26, 26, 26))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItemFRP_v12_RB_SOLO_SOCSIEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemFRP_v12_RB_SOLO_SOCSIEActionPerformed
        String repcode = "RBSOLOSOCSIE";
        
        JInternalFrame reportparamframe = null;
        try {
            reportparamframe = new ReportParametersJInternalFrame(repcode);
        } catch (SQLException ex) {
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage());
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        jDesktopPane.add(reportparamframe);
        Dimension desktopSize = jDesktopPane.getSize();
        Dimension jInternalFrameSize = reportparamframe.getSize();
        int width = (desktopSize.width - jInternalFrameSize.width) / 2;
        int height = (desktopSize.height - jInternalFrameSize.height) / 2;
        reportparamframe.setLocation(width, height);
        reportparamframe.setVisible(true);
        reportparamframe.show();
        System.out.println("RB SOLO_SOCSIE was Clicked");
        
    }//GEN-LAST:event_jMenuItemFRP_v12_RB_SOLO_SOCSIEActionPerformed

    private void jMenuItemFRP_v12_RB_SOLO_SIEACCTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemFRP_v12_RB_SOLO_SIEACCTActionPerformed
        String repcode = "RBSOLOSIEACCT";
        JInternalFrame reportparamframe = null;
        try {
            reportparamframe = new ReportParametersJInternalFrame(repcode);
        } catch (SQLException ex) {
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage());
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        jDesktopPane.add(reportparamframe);
        Dimension desktopSize = jDesktopPane.getSize();
        Dimension jInternalFrameSize = reportparamframe.getSize();
        int width = (desktopSize.width - jInternalFrameSize.width) / 2;
        int height = (desktopSize.height - jInternalFrameSize.height) / 2;
        reportparamframe.setLocation(width, height);
        reportparamframe.setVisible(true);
        reportparamframe.show();
        
        System.out.println("RB-SOLO-SIEACCT was Clicked");
        
    }//GEN-LAST:event_jMenuItemFRP_v12_RB_SOLO_SIEACCTActionPerformed

    private void jMenuItemConnectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemConnectionActionPerformed
        jMenuItemConnection.setEnabled(false);
        JInternalFrame settingframe = null;
        try {
            settingframe = new SettingJInternalFrame();
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        jDesktopPane.add(settingframe);
        Dimension desktopSize = jDesktopPane.getSize();
        Dimension jInternalFrameSize = settingframe.getSize();
        int width = (desktopSize.width - jInternalFrameSize.width) / 2;
        int height = (desktopSize.height - jInternalFrameSize.height) / 2;
        settingframe.setLocation(width, height);
        settingframe.setVisible(true);
        settingframe.show();
                    
    }//GEN-LAST:event_jMenuItemConnectionActionPerformed

    private void jMenuItemFRP_v12_RB_SOLO_ANNUALActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemFRP_v12_RB_SOLO_ANNUALActionPerformed
        String repcode = "RBSOLOANNUAL";
        JInternalFrame reportparamframe = null;
        try {
            reportparamframe = new ReportParametersJInternalFrame(repcode);
        } catch (SQLException ex) {
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage());
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        jDesktopPane.add(reportparamframe);
        Dimension desktopSize = jDesktopPane.getSize();
        Dimension jInternalFrameSize = reportparamframe.getSize();
        int width = (desktopSize.width - jInternalFrameSize.width) / 2;
        int height = (desktopSize.height - jInternalFrameSize.height) / 2;
        reportparamframe.setLocation(width, height);
        reportparamframe.setVisible(true);
        reportparamframe.show();
        System.out.println("RB-SOLO-ANNUAL was Clicked");
        
    }//GEN-LAST:event_jMenuItemFRP_v12_RB_SOLO_ANNUALActionPerformed

    private void jMenuItemFRP_v12_RB_SOLO_OTHERASTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemFRP_v12_RB_SOLO_OTHERASTActionPerformed
        String repcode = "RBSOLOOTHERAST";
        JInternalFrame reportparamframe = null;
        try {
            reportparamframe = new ReportParametersJInternalFrame(repcode);
        } catch (SQLException ex) {
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage());
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        jDesktopPane.add(reportparamframe);
        Dimension desktopSize = jDesktopPane.getSize();
        Dimension jInternalFrameSize = reportparamframe.getSize();
        int width = (desktopSize.width - jInternalFrameSize.width) / 2;
        int height = (desktopSize.height - jInternalFrameSize.height) / 2;
        reportparamframe.setLocation(width, height);
        reportparamframe.setVisible(true);
        reportparamframe.show();
        System.out.println("RB-SOLO-OTHERAST was Clicked");
        
    }//GEN-LAST:event_jMenuItemFRP_v12_RB_SOLO_OTHERASTActionPerformed

    private void jMenuItemFRP_v12_RB_SOLO_NONFINActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemFRP_v12_RB_SOLO_NONFINActionPerformed
        String repcode = "RBSOLONONFIN";
        JInternalFrame reportparamframe = null;
        try {
            reportparamframe = new ReportParametersJInternalFrame(repcode);
        } catch (SQLException ex) {
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage());
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        jDesktopPane.add(reportparamframe);
        Dimension desktopSize = jDesktopPane.getSize();
        Dimension jInternalFrameSize = reportparamframe.getSize();
        int width = (desktopSize.width - jInternalFrameSize.width) / 2;
        int height = (desktopSize.height - jInternalFrameSize.height) / 2;
        reportparamframe.setLocation(width, height);
        reportparamframe.setVisible(true);
        reportparamframe.show();
        System.out.println("RB-SOLO-NONFIN was Clicked");
        
    }//GEN-LAST:event_jMenuItemFRP_v12_RB_SOLO_NONFINActionPerformed

    private void jMenuItemFRP_v12_RB_SOLO_LOANSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemFRP_v12_RB_SOLO_LOANSActionPerformed
        String repcode = "RBSOLOLOANS";
        JInternalFrame reportparamframe = null;
        try {
            reportparamframe = new ReportParametersJInternalFrame(repcode);
        } catch (SQLException ex) {
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage());
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        jDesktopPane.add(reportparamframe);
        Dimension desktopSize = jDesktopPane.getSize();
        Dimension jInternalFrameSize = reportparamframe.getSize();
        int width = (desktopSize.width - jInternalFrameSize.width) / 2;
        int height = (desktopSize.height - jInternalFrameSize.height) / 2;
        reportparamframe.setLocation(width, height);
        reportparamframe.setVisible(true);
        reportparamframe.show();
        System.out.println("RB-SOLO-LOANS was Clicked");
        

    }//GEN-LAST:event_jMenuItemFRP_v12_RB_SOLO_LOANSActionPerformed

    private void jMenuItemFRP_v12_RB_SOLO_FINASSETActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemFRP_v12_RB_SOLO_FINASSETActionPerformed
        String repcode = "RBSOLOFINASSET";
        JInternalFrame reportparamframe = null;
        try {
            reportparamframe = new ReportParametersJInternalFrame(repcode);
        } catch (SQLException ex) {
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage());
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        jDesktopPane.add(reportparamframe);
        Dimension desktopSize = jDesktopPane.getSize();
        Dimension jInternalFrameSize = reportparamframe.getSize();
        int width = (desktopSize.width - jInternalFrameSize.width) / 2;
        int height = (desktopSize.height - jInternalFrameSize.height) / 2;
        reportparamframe.setLocation(width, height);
        reportparamframe.setVisible(true);
        reportparamframe.show();
        System.out.println("RB-SOLO-FINASSET was Clicked");
        
    }//GEN-LAST:event_jMenuItemFRP_v12_RB_SOLO_FINASSETActionPerformed

    private void jMenuItemFRP_v12_RB_SOLO_DEPLIABActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemFRP_v12_RB_SOLO_DEPLIABActionPerformed
        String repcode = "RBSOLODEPLIAB";
        JInternalFrame reportparamframe = null;
        try {
            reportparamframe = new ReportParametersJInternalFrame(repcode);
        } catch (SQLException ex) {
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage());
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        jDesktopPane.add(reportparamframe);
        Dimension desktopSize = jDesktopPane.getSize();
        Dimension jInternalFrameSize = reportparamframe.getSize();
        int width = (desktopSize.width - jInternalFrameSize.width) / 2;
        int height = (desktopSize.height - jInternalFrameSize.height) / 2;
        reportparamframe.setLocation(width, height);
        reportparamframe.setVisible(true);
        reportparamframe.show();
        System.out.println("RB-SOLO-DEPLIAB was Clicked");
        
    }//GEN-LAST:event_jMenuItemFRP_v12_RB_SOLO_DEPLIABActionPerformed

    private void jMenuItemFRP_v12_RB_SOLO_COCEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemFRP_v12_RB_SOLO_COCEActionPerformed
        String repcode = "RBSOLOCOCE";
        JInternalFrame reportparamframe = null;
        try {
            reportparamframe = new ReportParametersJInternalFrame(repcode);
        } catch (SQLException ex) {
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage());
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        jDesktopPane.add(reportparamframe);
        Dimension desktopSize = jDesktopPane.getSize();
        Dimension jInternalFrameSize = reportparamframe.getSize();
        int width = (desktopSize.width - jInternalFrameSize.width) / 2;
        int height = (desktopSize.height - jInternalFrameSize.height) / 2;
        reportparamframe.setLocation(width, height);
        reportparamframe.setVisible(true);
        reportparamframe.show();
        System.out.println("RB-SOLO-COCE was Clicked");
        
    }//GEN-LAST:event_jMenuItemFRP_v12_RB_SOLO_COCEActionPerformed

    private void jMenuItemFRP_v12_RB_SOLO_CNTINGNTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemFRP_v12_RB_SOLO_CNTINGNTActionPerformed
        String repcode = "RBSOLOCNTINGNT";
        JInternalFrame reportparamframe = null;
        try {
            reportparamframe = new ReportParametersJInternalFrame(repcode);
        } catch (SQLException ex) {
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage());
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        jDesktopPane.add(reportparamframe);
        Dimension desktopSize = jDesktopPane.getSize();
        Dimension jInternalFrameSize = reportparamframe.getSize();
        int width = (desktopSize.width - jInternalFrameSize.width) / 2;
        int height = (desktopSize.height - jInternalFrameSize.height) / 2;
        reportparamframe.setLocation(width, height);
        reportparamframe.setVisible(true);
        reportparamframe.show();
        System.out.println("RB-SOLO-CNTINGNT was Clicked");
        
    }//GEN-LAST:event_jMenuItemFRP_v12_RB_SOLO_CNTINGNTActionPerformed

    private void jMenuItemFRP_v12_RB_SOLO_BORROWActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemFRP_v12_RB_SOLO_BORROWActionPerformed
        String repcode = "RBSOLOBORROW";
        JInternalFrame reportparamframe = null;
        try {
            reportparamframe = new ReportParametersJInternalFrame(repcode);
        } catch (SQLException ex) {
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage());
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        jDesktopPane.add(reportparamframe);
        Dimension desktopSize = jDesktopPane.getSize();
        Dimension jInternalFrameSize = reportparamframe.getSize();
        int width = (desktopSize.width - jInternalFrameSize.width) / 2;
        int height = (desktopSize.height - jInternalFrameSize.height) / 2;
        reportparamframe.setLocation(width, height);
        reportparamframe.setVisible(true);
        reportparamframe.show();
        System.out.println("RB-SOLO-BORROW was Clicked");
        
    }//GEN-LAST:event_jMenuItemFRP_v12_RB_SOLO_BORROWActionPerformed

    private void jMenuItemFRP_v12_RB_SOLO_OTHRLIABActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemFRP_v12_RB_SOLO_OTHRLIABActionPerformed
        String repcode = "RBSOLOOTHRLIAB";
        JInternalFrame reportparamframe = null;
        try {
            reportparamframe = new ReportParametersJInternalFrame(repcode);
        } catch (SQLException ex) {
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage());
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        jDesktopPane.add(reportparamframe);
        Dimension desktopSize = jDesktopPane.getSize();
        Dimension jInternalFrameSize = reportparamframe.getSize();
        int width = (desktopSize.width - jInternalFrameSize.width) / 2;
        int height = (desktopSize.height - jInternalFrameSize.height) / 2;
        reportparamframe.setLocation(width, height);
        reportparamframe.setVisible(true);
        reportparamframe.show();
        System.out.println("RB-SOLO-OTHRLIAB was Clicked");
    }//GEN-LAST:event_jMenuItemFRP_v12_RB_SOLO_OTHRLIABActionPerformed

    private void jMenuItem_amlcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_amlcActionPerformed
        JInternalFrame amlcframe = null;
        try {
            amlcframe = new AmlcJInternalFrame();
        } catch (SQLException ex) {
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        jDesktopPane.add(amlcframe);
        Dimension desktopSize = jDesktopPane.getSize();
        Dimension jInternalFrameSize = amlcframe.getSize();
        int width = (desktopSize.width - jInternalFrameSize.width) / 2;
        int height = (desktopSize.height - jInternalFrameSize.height) / 2;
        amlcframe.setLocation(width, height);
        amlcframe.setVisible(true);
        amlcframe.show();
    }//GEN-LAST:event_jMenuItem_amlcActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        String repcode = "CONTROLPROOFLIST";
        JInternalFrame reportparamframe = null;
        try {
            reportparamframe = new ReportParametersJInternalFrame(repcode);
        } catch (SQLException ex) {
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage());
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        jDesktopPane.add(reportparamframe);
        Dimension desktopSize = jDesktopPane.getSize();
        Dimension jInternalFrameSize = reportparamframe.getSize();
        int width = (desktopSize.width - jInternalFrameSize.width) / 2;
        int height = (desktopSize.height - jInternalFrameSize.height) / 2;
        reportparamframe.setLocation(width, height);
        reportparamframe.setVisible(true);
        reportparamframe.show();
        System.out.println("Control Prooflist was Clicked");
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem_WRRARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_WRRARActionPerformed
        String repcode = "WRRAR";
        JInternalFrame reportparamframe = null;
        try {
            reportparamframe = new WrarJInternalFrame(repcode);
        } catch (SQLException ex) {
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage());
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        jDesktopPane.add(reportparamframe);
        Dimension desktopSize = jDesktopPane.getSize();
        Dimension jInternalFrameSize = reportparamframe.getSize();
        int width = (desktopSize.width - jInternalFrameSize.width) / 2;
        int height = (desktopSize.height - jInternalFrameSize.height) / 2;
        reportparamframe.setLocation(width, height);
        reportparamframe.setVisible(true);
        reportparamframe.show();
        System.out.println("WRRAR was Clicked");
    }//GEN-LAST:event_jMenuItem_WRRARActionPerformed

    private void jMenuItemPBSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemPBSActionPerformed
//        String repcode = "PBS";
//        JInternalFrame reportparamframe = null;
//        try {
//            reportparamframe = new ReportParametersJInternalFrame(repcode);
//        } catch (SQLException ex) {
//            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
//            JOptionPane.showMessageDialog(this, ex.getMessage());
//        } catch (IOException ex) {
//            JOptionPane.showMessageDialog(this, ex.getMessage());
//            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
//        }
//        jDesktopPane.add(reportparamframe);
//        Dimension desktopSize = jDesktopPane.getSize();
//        Dimension jInternalFrameSize = reportparamframe.getSize();
//        int width = (desktopSize.width - jInternalFrameSize.width) / 2;
//        int height = (desktopSize.height - jInternalFrameSize.height) / 2;
//        reportparamframe.setLocation(width, height);
//        reportparamframe.setVisible(true);
//        reportparamframe.show();
//        System.out.println("PBS was Clicked");
        String repcode = "PBS";
        JInternalFrame reportparamframe = null;
        
        try {
            reportparamframe = new PBSJInternalFrame(repcode);
        } catch (SQLException ex) {
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage());
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        jDesktopPane.add(reportparamframe);
        Dimension desktopSize = jDesktopPane.getSize();
        Dimension jInternalFrameSize = reportparamframe.getSize();
        int width = (desktopSize.width - jInternalFrameSize.width) / 2;
        int height = (desktopSize.height - jInternalFrameSize.height) / 2;
        reportparamframe.setLocation(width, height);
        reportparamframe.setVisible(true);
        reportparamframe.show();
        System.out.println("PBS");


    }//GEN-LAST:event_jMenuItemPBSActionPerformed

    private void jMenuItemPBS_CPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemPBS_CPActionPerformed
        String repcode = "PBSCP";
        JInternalFrame reportparamframe = null;
        try {
            reportparamframe = new ReportParametersJInternalFrame(repcode);
        } catch (SQLException ex) {
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage());
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        jDesktopPane.add(reportparamframe);
        Dimension desktopSize = jDesktopPane.getSize();
        Dimension jInternalFrameSize = reportparamframe.getSize();
        int width = (desktopSize.width - jInternalFrameSize.width) / 2;
        int height = (desktopSize.height - jInternalFrameSize.height) / 2;
        reportparamframe.setLocation(width, height);
        reportparamframe.setVisible(true);
        reportparamframe.show();
        System.out.println("PBSCP was Clicked");
    }//GEN-LAST:event_jMenuItemPBS_CPActionPerformed

    private void jMenuItemAgriAgraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemAgriAgraActionPerformed
        String repcode = "AGRIAGRA";
        JInternalFrame reportparamframe = null;
        try {
            reportparamframe = new ReportParametersJInternalFrame(repcode);
        } catch (SQLException ex) {
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage());
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        jDesktopPane.add(reportparamframe);
        Dimension desktopSize = jDesktopPane.getSize();
        Dimension jInternalFrameSize = reportparamframe.getSize();
        int width = (desktopSize.width - jInternalFrameSize.width) / 2;
        int height = (desktopSize.height - jInternalFrameSize.height) / 2;
        reportparamframe.setLocation(width, height);
        reportparamframe.setVisible(true);
        reportparamframe.show();
        System.out.println("AGRIAGRA was Clicked");
    }//GEN-LAST:event_jMenuItemAgriAgraActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        String repcode = "AGRIAGRACP";
        JInternalFrame reportparamframe = null;
        try {
            reportparamframe = new ReportParametersJInternalFrame(repcode);
        } catch (SQLException ex) {
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage());
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        jDesktopPane.add(reportparamframe);
        Dimension desktopSize = jDesktopPane.getSize();
        Dimension jInternalFrameSize = reportparamframe.getSize();
        int width = (desktopSize.width - jInternalFrameSize.width) / 2;
        int height = (desktopSize.height - jInternalFrameSize.height) / 2;
        reportparamframe.setLocation(width, height);
        reportparamframe.setVisible(true);
        reportparamframe.show();
        System.out.println("AGRIAGRA CP was Clicked");
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItemCAR688CSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemCAR688CSActionPerformed
        String repcode = "CAR688CS";
        JInternalFrame reportparamframe = null;
        try {
            reportparamframe = new ReportParametersJInternalFrame(repcode);
        } catch (SQLException ex) {
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage());
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        jDesktopPane.add(reportparamframe);
        Dimension desktopSize = jDesktopPane.getSize();
        Dimension jInternalFrameSize = reportparamframe.getSize();
        int width = (desktopSize.width - jInternalFrameSize.width) / 2;
        int height = (desktopSize.height - jInternalFrameSize.height) / 2;
        reportparamframe.setLocation(width, height);
        reportparamframe.setVisible(true);
        reportparamframe.show();
        System.out.println("CAR668-CS was Clicked");
    }//GEN-LAST:event_jMenuItemCAR688CSActionPerformed

    private void jMenuItemCARCPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemCARCPActionPerformed
        String repcode = "CARCP";
        JInternalFrame reportparamframe = null;
        try {
            reportparamframe = new ReportParametersJInternalFrame(repcode);
        } catch (SQLException ex) {
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage());
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        jDesktopPane.add(reportparamframe);
        Dimension desktopSize = jDesktopPane.getSize();
        Dimension jInternalFrameSize = reportparamframe.getSize();
        int width = (desktopSize.width - jInternalFrameSize.width) / 2;
        int height = (desktopSize.height - jInternalFrameSize.height) / 2;
        reportparamframe.setLocation(width, height);
        reportparamframe.setVisible(true);
        reportparamframe.show();
        System.out.println("CAR CP was Clicked");
    }//GEN-LAST:event_jMenuItemCARCPActionPerformed

    private void jMenuItemMFCPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemMFCPActionPerformed
        String repcode = "MFCP";
        JInternalFrame reportparamframe = null;
        try {
            reportparamframe = new ReportParametersJInternalFrame(repcode);
        } catch (SQLException ex) {
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage());
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        jDesktopPane.add(reportparamframe);
        Dimension desktopSize = jDesktopPane.getSize();
        Dimension jInternalFrameSize = reportparamframe.getSize();
        int width = (desktopSize.width - jInternalFrameSize.width) / 2;
        int height = (desktopSize.height - jInternalFrameSize.height) / 2;
        reportparamframe.setLocation(width, height);
        reportparamframe.setVisible(true);
        reportparamframe.show();
        System.out.println("MF CONTROL PROOFLIST was Clicked");
    }//GEN-LAST:event_jMenuItemMFCPActionPerformed

    private void jMenuItemMFMBSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemMFMBSActionPerformed
        String repcode = "MFMBS";
        JInternalFrame reportparamframe = null;
        try {
            reportparamframe = new ReportParametersJInternalFrame(repcode);
        } catch (SQLException ex) {
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage());
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        jDesktopPane.add(reportparamframe);
        Dimension desktopSize = jDesktopPane.getSize();
        Dimension jInternalFrameSize = reportparamframe.getSize();
        int width = (desktopSize.width - jInternalFrameSize.width) / 2;
        int height = (desktopSize.height - jInternalFrameSize.height) / 2;
        reportparamframe.setLocation(width, height);
        reportparamframe.setVisible(true);
        reportparamframe.show();
        System.out.println("MFMBS was Clicked");
    }//GEN-LAST:event_jMenuItemMFMBSActionPerformed

    private void jMenuItemMFMISActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemMFMISActionPerformed
        String repcode = "MFMIS";
        JInternalFrame reportparamframe = null;
        try {
            reportparamframe = new ReportParametersJInternalFrame(repcode);
        } catch (SQLException ex) {
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage());
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        jDesktopPane.add(reportparamframe);
        Dimension desktopSize = jDesktopPane.getSize();
        Dimension jInternalFrameSize = reportparamframe.getSize();
        int width = (desktopSize.width - jInternalFrameSize.width) / 2;
        int height = (desktopSize.height - jInternalFrameSize.height) / 2;
        reportparamframe.setLocation(width, height);
        reportparamframe.setVisible(true);
        reportparamframe.show();
        System.out.println("MFMIS was Clicked");
    }//GEN-LAST:event_jMenuItemMFMISActionPerformed

    private void jMenuItemMSMEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemMSMEActionPerformed
        String repcode = "MSME";
        JInternalFrame reportparamframe = null;
        try {
            reportparamframe = new ReportParametersJInternalFrame(repcode);
        } catch (SQLException ex) {
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage());
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        jDesktopPane.add(reportparamframe);
        Dimension desktopSize = jDesktopPane.getSize();
        Dimension jInternalFrameSize = reportparamframe.getSize();
        int width = (desktopSize.width - jInternalFrameSize.width) / 2;
        int height = (desktopSize.height - jInternalFrameSize.height) / 2;
        reportparamframe.setLocation(width, height);
        reportparamframe.setVisible(true);
        reportparamframe.show();
        System.out.println("MSME was Clicked");
    }//GEN-LAST:event_jMenuItemMSMEActionPerformed

    private void jMenuItemMSMECPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemMSMECPActionPerformed
        String repcode = "MSMECP";
        JInternalFrame reportparamframe = null;
        try {
            reportparamframe = new ReportParametersJInternalFrame(repcode);
        } catch (SQLException ex) {
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage());
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        jDesktopPane.add(reportparamframe);
        Dimension desktopSize = jDesktopPane.getSize();
        Dimension jInternalFrameSize = reportparamframe.getSize();
        int width = (desktopSize.width - jInternalFrameSize.width) / 2;
        int height = (desktopSize.height - jInternalFrameSize.height) / 2;
        reportparamframe.setLocation(width, height);
        reportparamframe.setVisible(true);
        reportparamframe.show();
        System.out.println("MSME was Clicked");
    }//GEN-LAST:event_jMenuItemMSMECPActionPerformed

    private void jMenuItemExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemExitActionPerformed
        this.dispose();
    }//GEN-LAST:event_jMenuItemExitActionPerformed

    private void jMenuItemBRISActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemBRISActionPerformed
        String repcode = "BRISCP";
        JInternalFrame reportparamframe = null;
        try {
            reportparamframe = new ReportParametersJInternalFrame(repcode);
        } catch (SQLException ex) {
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage());
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        jDesktopPane.add(reportparamframe);
        Dimension desktopSize = jDesktopPane.getSize();
        Dimension jInternalFrameSize = reportparamframe.getSize();
        int width = (desktopSize.width - jInternalFrameSize.width) / 2;
        int height = (desktopSize.height - jInternalFrameSize.height) / 2;
        reportparamframe.setLocation(width, height);
        reportparamframe.setVisible(true);
        reportparamframe.show();
        System.out.println("BRIS CP was Clicked");
    }//GEN-LAST:event_jMenuItemBRISActionPerformed

    private void jMenuItemxBnkBranchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemxBnkBranchActionPerformed
        String repcode = "XBNKBRANCH";
        JInternalFrame reportparamframe = null;
        try {
            reportparamframe = new ReportParametersJInternalFrame(repcode);
        } catch (SQLException ex) {
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage());
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        jDesktopPane.add(reportparamframe);
        Dimension desktopSize = jDesktopPane.getSize();
        Dimension jInternalFrameSize = reportparamframe.getSize();
        int width = (desktopSize.width - jInternalFrameSize.width) / 2;
        int height = (desktopSize.height - jInternalFrameSize.height) / 2;
        reportparamframe.setLocation(width, height);
        reportparamframe.setVisible(true);
        reportparamframe.show();
        System.out.println("XBNKBRANCH was Clicked");
    }//GEN-LAST:event_jMenuItemxBnkBranchActionPerformed

    private void jMenuItemDataFormActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemDataFormActionPerformed
        try {
            JInternalFrame settingframe = null;
            settingframe = new DataFormJInternalFrame();
            jDesktopPane.add(settingframe);
            Dimension desktopSize = jDesktopPane.getSize();
            Dimension jInternalFrameSize = settingframe.getSize();
            int width = (desktopSize.width - jInternalFrameSize.width) / 2;
            int height = (desktopSize.height - jInternalFrameSize.height) / 2;
            settingframe.setLocation(width, height);
            settingframe.setVisible(true);
            settingframe.show();
        } catch (SQLException | IOException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItemDataFormActionPerformed

    private void jMenuItemDAVDepositorInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemDAVDepositorInfoActionPerformed
        try {
            //JOptionPane.showMessageDialog(this, "DAV Depositor Information under development");
            DavCreateDepositorInformation.saveFile("1");
            JOptionPane.showMessageDialog(this,"DAV Report Complete.");
        } catch (SQLException | IOException | JRException ex) {
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItemDAVDepositorInfoActionPerformed

    private void jMenuItemCICActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemCICActionPerformed
        try {
            //JOptionPane.showMessageDialog(this, "CIC under development");
            JInternalFrame settingframe = null;
            settingframe = new CICJInternalFrame();
            jDesktopPane.add(settingframe);
            Dimension desktopSize = jDesktopPane.getSize();
            Dimension jInternalFrameSize = settingframe.getSize();
            int width = (desktopSize.width - jInternalFrameSize.width) / 2;
            int height = (desktopSize.height - jInternalFrameSize.height) / 2;
            settingframe.setLocation(width, height);
            settingframe.setVisible(true);
            settingframe.show();
        } catch (SQLException | IOException ex) {
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItemCICActionPerformed

    private void jMenuReportsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuReportsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuReportsActionPerformed

    private void jMenuItemFRP_v12_RB_SOLO_FINLIABActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemFRP_v12_RB_SOLO_FINLIABActionPerformed
        String repcode = "RBSOLOFINLIAB";
        JInternalFrame reportparamframe = null;
        try {
            reportparamframe = new ReportParametersJInternalFrame(repcode);
        } catch (SQLException ex) {
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage());
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        jDesktopPane.add(reportparamframe);
        Dimension desktopSize = jDesktopPane.getSize();
        Dimension jInternalFrameSize = reportparamframe.getSize();
        int width = (desktopSize.width - jInternalFrameSize.width) / 2;
        int height = (desktopSize.height - jInternalFrameSize.height) / 2;
        reportparamframe.setLocation(width, height);
        reportparamframe.setVisible(true);
        reportparamframe.show();
        System.out.println("RB-SOLO-FINLIAB was Clicked");
    }//GEN-LAST:event_jMenuItemFRP_v12_RB_SOLO_FINLIABActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
       try {
            //JOptionPane.showMessageDialog(this, "DAV Depositor Information under development");
            DavCreateDepositorInformation.saveFile("2");
            JOptionPane.showMessageDialog(this,"DAV Report Complete.");
        } catch (SQLException | IOException | JRException ex) {
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        jasperFileName = "jasper/CIC_ID.jasper";
        try {
            CreateJasperReportOutPut.showReport(jasperFileName);
        } catch (SQLException | IOException ex) {
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        jasperFileName = "jasper/CIC_BD.jasper";
        try {
            CreateJasperReportOutPut.showReport(jasperFileName);
        } catch (SQLException | IOException ex) {
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        try {
            //JOptionPane.showMessageDialog(this, "DAV Depositor Information under development");
            DavCreateDepositorInformation.saveFile("3");
            JOptionPane.showMessageDialog(this,"DAV Report Complete.");
        } catch (SQLException | IOException | JRException ex) {
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        jasperFileName = "jasper/CIC_CI.jasper";
        try {
            CreateJasperReportOutPut.showReport(jasperFileName);
        } catch (SQLException | IOException ex) {
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        jasperFileName = "jasper/CIC_CN.jasper";
        try {
            CreateJasperReportOutPut.showReport(jasperFileName);
        } catch (SQLException | IOException ex) {
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jMenuItem13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem13ActionPerformed
       // TODO add your handling code here:
        String repcode = "FINANCIAL STATEMENT";
        JInternalFrame reportparamframe = null;

        try {
            reportparamframe = new FSConsoReportJInternalFrame(repcode);
        } catch (SQLException ex) {
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        jDesktopPane.add(reportparamframe);
        Dimension desktopSize = jDesktopPane.getSize();
        Dimension jInternalFrameSize = reportparamframe.getSize();
        int width = (desktopSize.width - jInternalFrameSize.width) / 2;
        int height = (desktopSize.height - jInternalFrameSize.height) / 2;
        reportparamframe.setLocation(width, height);
        reportparamframe.setVisible(true);
        reportparamframe.show();
        System.out.println("Control Report Preparation");
        
    }//GEN-LAST:event_jMenuItem13ActionPerformed

    private void jMenuItem14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem14ActionPerformed
        // TODO add your handling code here:
        String repcode = "FINANCIAL STATEMENT";
        JInternalFrame reportparamframe = null;

        try {
            reportparamframe = new FSPerBranchReportJInternalFrame(repcode);
        } catch (SQLException ex) {
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        jDesktopPane.add(reportparamframe);
        Dimension desktopSize = jDesktopPane.getSize();
        Dimension jInternalFrameSize = reportparamframe.getSize();
        int width = (desktopSize.width - jInternalFrameSize.width) / 2;
        int height = (desktopSize.height - jInternalFrameSize.height) / 2;
        reportparamframe.setLocation(width, height);
        reportparamframe.setVisible(true);
        reportparamframe.show();
        System.out.println("Control Report Preparation");
        
    }//GEN-LAST:event_jMenuItem14ActionPerformed

    private void jMenuItem16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem16ActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        String repcode = "FINANCIAL STATEMENT";
        JInternalFrame reportparamframe = null;

        try {
            reportparamframe = new FSComparativeConsoJInternalFrame(repcode);
        } catch (SQLException ex) {
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        jDesktopPane.add(reportparamframe);
        Dimension desktopSize = jDesktopPane.getSize();
        Dimension jInternalFrameSize = reportparamframe.getSize();
        int width = (desktopSize.width - jInternalFrameSize.width) / 2;
        int height = (desktopSize.height - jInternalFrameSize.height) / 2;
        reportparamframe.setLocation(width, height);
        reportparamframe.setVisible(true);
        reportparamframe.show();
        System.out.println("Control Report Preparation");
    }//GEN-LAST:event_jMenuItem16ActionPerformed

    private void jMenuItem17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem17ActionPerformed
       // TODO add your handling code here:
        String repcode = "FINANCIAL STATEMENT";
        JInternalFrame reportparamframe = null;

        try {
            reportparamframe = new FSComparativePerBranchJInternalFrame(repcode);
        } catch (SQLException ex) {
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        jDesktopPane.add(reportparamframe);
        Dimension desktopSize = jDesktopPane.getSize();
        Dimension jInternalFrameSize = reportparamframe.getSize();
        int width = (desktopSize.width - jInternalFrameSize.width) / 2;
        int height = (desktopSize.height - jInternalFrameSize.height) / 2;
        reportparamframe.setLocation(width, height);
        reportparamframe.setVisible(true);
        reportparamframe.show();
        System.out.println("Control Report Preparation");
    }//GEN-LAST:event_jMenuItem17ActionPerformed

    private void jMenuItem15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem15ActionPerformed
                // TODO add your handling code here:
        String repcode = "REPORT_PREPARATION";
        JInternalFrame reportparamframe = null;

        try {
            reportparamframe = new PrepReportParameterJInternalFrame1(repcode);
        } catch (SQLException ex) {
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage());
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        jDesktopPane.add(reportparamframe);
        Dimension desktopSize = jDesktopPane.getSize();
        Dimension jInternalFrameSize = reportparamframe.getSize();
        int width = (desktopSize.width - jInternalFrameSize.width) / 2;
        int height = (desktopSize.height - jInternalFrameSize.height) / 2;
        reportparamframe.setLocation(width, height);
        reportparamframe.setVisible(true);
        reportparamframe.show();
        System.out.println("Control Report Preparation");
    }//GEN-LAST:event_jMenuItem15ActionPerformed

    private void jMenuItem21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem21ActionPerformed
        // TODO add your handling code here:
        String repcode = "LIQUIDITY RATIO";
        JInternalFrame reportparamframe = null;

        try {
            reportparamframe = new LiquidityRatioReportJInternalFrame(repcode);
        } catch (SQLException ex) {
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        jDesktopPane.add(reportparamframe);
        Dimension desktopSize = jDesktopPane.getSize();
        Dimension jInternalFrameSize = reportparamframe.getSize();
        int width = (desktopSize.width - jInternalFrameSize.width) / 2;
        int height = (desktopSize.height - jInternalFrameSize.height) / 2;
        reportparamframe.setLocation(width, height);
        reportparamframe.setVisible(true);
        reportparamframe.show();
        System.out.println("Control Report Preparation");
    }//GEN-LAST:event_jMenuItem21ActionPerformed

    private void jMenuItem24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem24ActionPerformed
        // TODO add your handling code here:
        String repcode = "OTHER KEY RATIO";
        JInternalFrame reportparamframe = null;

        try {
            reportparamframe = new OtherKeyRatioReportJInternalFrame(repcode);
        } catch (SQLException ex) {
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        jDesktopPane.add(reportparamframe);
        Dimension desktopSize = jDesktopPane.getSize();
        Dimension jInternalFrameSize = reportparamframe.getSize();
        int width = (desktopSize.width - jInternalFrameSize.width) / 2;
        int height = (desktopSize.height - jInternalFrameSize.height) / 2;
        reportparamframe.setLocation(width, height);
        reportparamframe.setVisible(true);
        reportparamframe.show();
        System.out.println("Control Report Preparation");
    }//GEN-LAST:event_jMenuItem24ActionPerformed

    private void jMenuItemCIC1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemCIC1ActionPerformed
        try {
            //JOptionPane.showMessageDialog(this, "CIC under development");
            JInternalFrame settingframe = null;
            settingframe = new CICJInternalFrame2();
            jDesktopPane.add(settingframe);
            Dimension desktopSize = jDesktopPane.getSize();
            Dimension jInternalFrameSize = settingframe.getSize();
            int width = (desktopSize.width - jInternalFrameSize.width) / 2;
            int height = (desktopSize.height - jInternalFrameSize.height) / 2;
            settingframe.setLocation(width, height);
            settingframe.setVisible(true);
            settingframe.show();
        } catch (SQLException | IOException ex) {
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItemCIC1ActionPerformed

    /**
     * @param args the command line arguments
     * @throws java.sql.SQLException
     * @throws java.io.IOException
     */
    public static void main(String args[]) throws SQLException, IOException {
        
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                try {
                    new MainJFrame().setVisible(true);
                    
                    
                    
                } catch (SQLException | IOException ex) {
                    Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
                
                
            }
        });
        
        
        
    }
    
    /**
     *
     * @param ReportCode
     * @param ReportDate
     * @throws SQLException
     * @throws IOException
     */
   
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JDesktopPane jDesktopPane;
    private javax.swing.JMenuBar jMainMenuBar;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenuAgriAgra;
    private javax.swing.JMenu jMenuBRIS;
    private javax.swing.JMenu jMenuCAR;
    private javax.swing.JMenu jMenuCIC;
    private javax.swing.JMenu jMenuDAV;
    private javax.swing.JMenu jMenuFRP;
    private javax.swing.JMenu jMenuFRP_v12;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem12;
    private javax.swing.JMenuItem jMenuItem13;
    private javax.swing.JMenuItem jMenuItem14;
    private javax.swing.JMenuItem jMenuItem15;
    private javax.swing.JMenuItem jMenuItem16;
    private javax.swing.JMenuItem jMenuItem17;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem21;
    private javax.swing.JMenuItem jMenuItem23;
    private javax.swing.JMenuItem jMenuItem24;
    private javax.swing.JMenuItem jMenuItem25;
    private javax.swing.JMenuItem jMenuItem26;
    private javax.swing.JMenuItem jMenuItem27;
    private javax.swing.JMenuItem jMenuItem28;
    private javax.swing.JMenuItem jMenuItem29;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem30;
    private javax.swing.JMenuItem jMenuItem31;
    private javax.swing.JMenuItem jMenuItem32;
    private javax.swing.JMenuItem jMenuItem33;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JMenuItem jMenuItemAgriAgra;
    private javax.swing.JMenuItem jMenuItemBRIS;
    private javax.swing.JMenuItem jMenuItemCAR688CS;
    private javax.swing.JMenuItem jMenuItemCARCP;
    private javax.swing.JMenuItem jMenuItemCIC;
    private javax.swing.JMenuItem jMenuItemCIC1;
    public javax.swing.JMenuItem jMenuItemConnection;
    private javax.swing.JMenuItem jMenuItemDAVDepositorInfo;
    public javax.swing.JMenuItem jMenuItemDataForm;
    private javax.swing.JMenuItem jMenuItemExit;
    private javax.swing.JMenuItem jMenuItemFRP_v12_RB_SOLO_ANNUAL;
    private javax.swing.JMenuItem jMenuItemFRP_v12_RB_SOLO_BORROW;
    private javax.swing.JMenuItem jMenuItemFRP_v12_RB_SOLO_CNTINGNT;
    private javax.swing.JMenuItem jMenuItemFRP_v12_RB_SOLO_COCE;
    private javax.swing.JMenuItem jMenuItemFRP_v12_RB_SOLO_DEPLIAB;
    private javax.swing.JMenuItem jMenuItemFRP_v12_RB_SOLO_FINASSET;
    private javax.swing.JMenuItem jMenuItemFRP_v12_RB_SOLO_FINLIAB;
    private javax.swing.JMenuItem jMenuItemFRP_v12_RB_SOLO_LOANS;
    private javax.swing.JMenuItem jMenuItemFRP_v12_RB_SOLO_NONFIN;
    private javax.swing.JMenuItem jMenuItemFRP_v12_RB_SOLO_OTHERAST;
    private javax.swing.JMenuItem jMenuItemFRP_v12_RB_SOLO_OTHRLIAB;
    private javax.swing.JMenuItem jMenuItemFRP_v12_RB_SOLO_SIEACCT;
    private javax.swing.JMenuItem jMenuItemFRP_v12_RB_SOLO_SOCSIE;
    private javax.swing.JMenuItem jMenuItemMFCP;
    private javax.swing.JMenuItem jMenuItemMFMBS;
    private javax.swing.JMenuItem jMenuItemMFMIS;
    private javax.swing.JMenuItem jMenuItemMSME;
    private javax.swing.JMenuItem jMenuItemMSMECP;
    private javax.swing.JMenuItem jMenuItemPBS;
    private javax.swing.JMenuItem jMenuItemPBS_CP;
    private javax.swing.JMenuItem jMenuItem_WRRAR;
    private javax.swing.JMenuItem jMenuItem_amlc;
    private javax.swing.JMenuItem jMenuItemxBnkBranch;
    private javax.swing.JMenu jMenuMF;
    private javax.swing.JMenu jMenuMSME;
    private javax.swing.JMenu jMenuPBS;
    public javax.swing.JMenu jMenuReports;
    public javax.swing.JMenu jMenuSettings;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JPopupMenu.Separator jSeparator5;
    private javax.swing.JPopupMenu.Separator jSeparator6;
    private javax.swing.JPopupMenu.Separator jSeparator7;
    private javax.swing.JPopupMenu.Separator jSeparator8;
    private javax.swing.JPopupMenu.Separator jSeparator9;
    // End of variables declaration//GEN-END:variables
}
